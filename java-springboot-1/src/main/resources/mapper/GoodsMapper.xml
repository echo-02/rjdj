<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.Goods" >
    <id column="gid" property="gid" jdbcType="INTEGER" />
    <result column="artno" property="artno" jdbcType="VARCHAR" />
    <result column="gname" property="gname" jdbcType="VARCHAR" />
    <result column="counts" property="counts" jdbcType="INTEGER" />
    <result column="cfid" property="cfid" jdbcType="INTEGER" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="cost" property="cost" jdbcType="DOUBLE" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <!-- 衍生映射 -->
  <resultMap id="BaseResultMapExtends" type="com.accp.domain.Goods"
  extends="BaseResultMap">
  	<result column="pic" property="pic" jdbcType="VARCHAR" />
  	<result column="cfname" property="cfname" jdbcType="VARCHAR" />
  	<collection property="goodsinstances" ofType="com.accp.domain.Goodsinstance">
  		<id column="giid" property="giid" jdbcType="INTEGER" />
	    <result column="gid" property="gid" jdbcType="INTEGER" />
	    <result column="barcode" property="barcode" jdbcType="VARCHAR" />
	    <result column="sfdids" property="sfdids" jdbcType="VARCHAR" />
	    <result column="gscounts" property="counts" jdbcType="INTEGER" />
	    <result column="spec" property="spec" jdbcType="VARCHAR" />
  	</collection>
  </resultMap>
  <update id="removeGoods">
  	UPDATE goods SET `status`=1 WHERE gid=#{gid}
  </update>
  <!-- 查询商品列表 -->
  <select id="getGoods" resultMap="BaseResultMapExtends">
  	SELECT  g.`gid` AS gid,g.`artno` AS artno,g.`gname` AS gname,g.`cfid` AS cfid,g.`brand` AS brand,
	g.`cost` AS cost,g.`price` AS price,g.`counts` AS counts,
	gs.`giid` AS giid,gs.`barcode` AS barcode,gs.`sfdids` AS sfdids,gs.`counts` AS gscounts,
	cf.`cfname` AS cfname,
	GROUP_CONCAT(test.sfdname) AS spec
	FROM `goods` AS g INNER JOIN `goodsinstance` AS gs ON g.`gid`=gs.`gid`
	INNER JOIN `classification` AS cf ON g.`cfid`=cf.`cfid` ,(SELECT * FROM `specificationdetails`) AS test
	WHERE FIND_IN_SET(test.sfdid,gs.`sfdids`)
	AND g.`status`=0
	<if test="cfid != 0 and cfid != '' and cfid != null">
		AND g.cfid= #{cfid}
	</if>
	<if test="gname != '' and gname != null ">
		AND g.gname LIKE CONCAT('%',#{gname},'%')
	</if>
	GROUP BY gs.`giid`;
  </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    gid, artno, gname, counts, cfid, brand, cost, price, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.GoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from goods
    where gid = #{gid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where gid = #{gid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.GoodsExample" >
    delete from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.Goods" >
    insert into goods (gid, artno, gname, 
      counts, cfid, brand, 
      cost, price, status)
    values (#{gid,jdbcType=INTEGER}, #{artno,jdbcType=VARCHAR}, #{gname,jdbcType=VARCHAR}, 
      #{counts,jdbcType=INTEGER}, #{cfid,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, 
      #{cost,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.Goods" keyProperty="gid" useGeneratedKeys="true">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="gid != null" >
        gid,
      </if>
      <if test="artno != null" >
        artno,
      </if>
      <if test="gname != null" >
        gname,
      </if>
      <if test="counts != null" >
        counts,
      </if>
      <if test="cfid != null" >
        cfid,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="gid != null" >
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="artno != null" >
        #{artno,jdbcType=VARCHAR},
      </if>
      <if test="gname != null" >
        #{gname,jdbcType=VARCHAR},
      </if>
      <if test="counts != null" >
        #{counts,jdbcType=INTEGER},
      </if>
      <if test="cfid != null" >
        #{cfid,jdbcType=INTEGER},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.GoodsExample" resultType="java.lang.Integer" >
    select count(*) from goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods
    <set >
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=INTEGER},
      </if>
      <if test="record.artno != null" >
        artno = #{record.artno,jdbcType=VARCHAR},
      </if>
      <if test="record.gname != null" >
        gname = #{record.gname,jdbcType=VARCHAR},
      </if>
      <if test="record.counts != null" >
        counts = #{record.counts,jdbcType=INTEGER},
      </if>
      <if test="record.cfid != null" >
        cfid = #{record.cfid,jdbcType=INTEGER},
      </if>
      <if test="record.brand != null" >
        brand = #{record.brand,jdbcType=VARCHAR},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=DOUBLE},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods
    set gid = #{record.gid,jdbcType=INTEGER},
      artno = #{record.artno,jdbcType=VARCHAR},
      gname = #{record.gname,jdbcType=VARCHAR},
      counts = #{record.counts,jdbcType=INTEGER},
      cfid = #{record.cfid,jdbcType=INTEGER},
      brand = #{record.brand,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=DOUBLE},
      price = #{record.price,jdbcType=DOUBLE},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.Goods" >
    update goods
    <set >
      <if test="artno != null" >
        artno = #{artno,jdbcType=VARCHAR},
      </if>
      <if test="gname != null" >
        gname = #{gname,jdbcType=VARCHAR},
      </if>
      <if test="counts != null" >
        counts = #{counts,jdbcType=INTEGER},
      </if>
      <if test="cfid != null" >
        cfid = #{cfid,jdbcType=INTEGER},
      </if>
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=DOUBLE},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where gid = #{gid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.Goods" >
    update goods
    set artno = #{artno,jdbcType=VARCHAR},
      gname = #{gname,jdbcType=VARCHAR},
      counts = #{counts,jdbcType=INTEGER},
      cfid = #{cfid,jdbcType=INTEGER},
      brand = #{brand,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=DOUBLE},
      price = #{price,jdbcType=DOUBLE},
      status = #{status,jdbcType=INTEGER}
    where gid = #{gid,jdbcType=INTEGER}
  </update>
</mapper>